---
include:
  - docassemble.AssemblyLine:assembly_line.yml
  - docassemble.MassAccess:massaccess.yml
---
metadata:
  title: >-
    Appellant brief
  short title: >-
    Appellant brief
  description: |-
    This interview helps someone in Massachusetts appeal a case to the Appeals Court.
  can_I_use_this_form: |
    If you are appealing a case, you can use this interview to write an informal brief to the Appeals Court.
  before_you_start: |
    This interview will help you write an informal brief to the Appeals Court
    
    Before you get started, please gather:
    
    1. Facts surrounding your case.
    2. The lower court's ruling.
    3. The judge's name from the lower court.
    
    When you are finished, you will need to:
    
    1. Submit this form to the Appeals Court.
    2. Wait for a reply from the other side.
  maturity: production
  estimated_completion_minutes: 30
  estimated_completion_delta: 5
  LIST_topics: 
    - "CO-00-00-00-00"
    - "CO-02-00-00-00"
    - "CO-03-00-00-00"
    - "CO-07-05-00-00"
  tags:
    - "CO-00-00-00-00"
    - "CO-02-00-00-00"
    - "CO-03-00-00-00"
    - "CO-07-05-00-00"
  authors:
    - Jack Brandt
  original_form:
    - https://www.mass.gov/info-details/appeals-court-informal-brief-pilot-program
  original_form_published_on: ""
  help_page_url: >-
    https://www.mass.gov/info-details/appeals-court-informal-brief-pilot-program
  help_page_title: >-
    AppealsCourt
  allowed_courts: 
    - "Appeals Court"
  typical_role: "plaintiff"
  al_weaver_version: "1.11.0"
  generated_on: "2024-10-24"
  languages:
    - en
  jurisdiction: NAM-US-US+MA
  review_date: 2024-10-24
  form_titles:
    - Appellant brief
  form_numbers: []
  update_notes: |
---
code: |
  # This controls the default country and list of states in address field questions
  AL_DEFAULT_COUNTRY = "US"
---
code: |
  # This controls the default state in address field questions
  AL_DEFAULT_STATE = "MA"
---
code: |
  github_repo_name =  'docassemble-AppellantBrief'
---
code: |
  interview_short_title = "Get an informal brief - appellant"
---
code: |
  al_form_type = "appeal" 
---
objects:
  - users: ALPeopleList.using(there_are_any=True)
  - other_parties: ALPeopleList.using(there_are_any=True)
  - challenged_judgments: DAList.using(target_number=1, there_are_any=True)
  - appeal_facts: DAList.using(target_number=1, there_are_any=True)
  - appeal_arguments: DAList.using(target_number=1, there_are_any=True)
  - docket_number: str
---
sections:
  - review_appellant_brief: Review your answers
---
#################### Interview order #####################
comment: |
  Controls order and branching logic for questions specific to this form
id: interview_order_appellant_brief
code: |
  # Set the allowed courts for this interview
  allowed_courts = ['Appeals Court', 'Other']
  nav.set_section("review_appellant_brief")
  user_role = "plaintiff"
  user_ask_role = "plaintiff"
  users.gather()
  set_parts(subtitle=str(users))
  users[0].pronouns
  Information
  set_progress(16)
  decision_date
  appeal_issues
  challenged_judgments
  appeal_facts
  appeal_arguments
  set_progress(32)
  appeal_conclusion
  served_informal_brief
  users[0].signature_date
  docket_number
  trial_court
  set_progress(48)
  other_parties.gather()
  users[0].address.address
  users[0].phone_number
  other_parties[0].address.address
  other_parties[0].email
  set_progress(64)
  users[0].email
  interview_order_appellant_brief = True
---
###################### Main order ######################
comment: |
  This block includes the logic for standalone interviews.
  Delete mandatory: True to include in another interview
mandatory: True
code: |
  al_intro_screen
  appellant_brief_intro
  interview_order_appellant_brief
  signature_date
  # Store anonymous data for analytics / statistics
  store_variables_snapshot(
      persistent=True,
      data={
          "zip": showifdef("users[0].address.zip"),
          "reached_interview_end": True,
      },
  )
  appellant_brief_download
---
id: Appellant_brief
continue button field: appellant_brief_intro
question: |
  Appellant brief
subquestion: |
  This interview will help you write an informal brief to the Appeals Court
  
  Before you get started, please gather:
  
  1. Facts surrounding your case.
  2. The lower court's ruling.
  3. The judge's name from the lower court.
  
  When you are finished, you will need to:
  
  1. Submit this form to the Appeals Court.
  2. Wait for a reply from the other side.

  If you are appealing a case, you can use this interview to write an informal brief to the Appeals Court.

  Most people take about 30 minutes to complete this interview.
---
id: Information
question: |
  Information
subquestion: |
  You can use this form to file an informal brief if you are appealing a court's decision to the Massachusetts Appeals Court.
continue button field: Information
---
id: Lower Court Information
question: |
  Lower Court Information
fields:
  - "What date did the lower court decide your case?": decision_date
    datatype: date
  - "What was the name of the judge in the lower court? (Do not write 'Judge' - we will take care of that for you)": judge_name
    required: False
  - "Write the date the case was filed in the lower court": filed_date
    datatype: date
---
id: Your Appeal
question: |
  Your Appeal
subquestion: |
  Write a description of what you are appealing.
fields:
  - "Write what you are appealing": appeal_issues
    input type: area
---
id: Challenged Judgments
question: |
  What judgments from the lower court are you challenging?
fields:
  - "Write the court decisions you want changed. Include the page numbers from the Record Appendix.": challenged_judgments
    input type: area
---
id: Facts
question: |
  Facts
subquestion: |
  Write out the facts of your case. Provide the page number you found them on.
fields:
  - "Write all of the facts about your case": appeal_facts
    input type: area
---
id: Argument
question: |
  Argument
subquestion: |
  Write out your argument.
  
  List the facts that support your argument.
  
  List any other cases you used to support your argument.
fields:
  - "Write why you think the lower court was wrong. Include facts from your argument. Write down any other cases you used to support your argument.": appeal_arguments
    input type: area
    required: True
---
id: Conclusion
question: |
  Conclusion
subquestion: |
  Write a brief summary of what action you want the court to take based on your argument.
fields:
  - "Write a summary of what you want from the court": appeal_conclusion
    input type: area
---
id: Confirmation Page
question: |
  Confirmation Page
subquestion: |
  Confirm that you are sending the brief, record appendix, and appendix. If you are unsure, you can call the Appeals Court at 617-921-4443.
fields:
  - "Check yes if you are sending this brief (usually yes)": served_informal_brief
    datatype: yesno
  - "Check yes if you are sending the record appendix (usually yes)": served_record_appendix
    datatype: yesno
  - "Check yes if you are sending the appendix (usually yes)": served_impounded_appendix
    datatype: yesno
---
id: Today s Date
question: |
  Today's Date
fields:
  - "Today's date": users[0].signature_date
    datatype: date
---
id: preview appellant_brief
question: |
  Preview your form before you sign it
subquestion: |
  Here is a preview of the form you will sign on the next page.   
  
  ${ al_court_bundle.as_pdf(key='preview') }

  Click the image to open it in a new tab. Click the "Edit answers" button
  to edit your answers.

  ${ action_button_html(url_action('review_appellant_brief'), label='Edit answers', color='info') }
  
  Remember to come back to this window to continue and sign your form.
continue button field: appellant_brief_preview_question    
---
code: |
  signature_fields = ['users[0].signature']
---
id: appellant brief review screen
event: review_appellant_brief
question: |
  Review your answers
review:
  - Edit: users.revisit
    button: |
      **Users**

      % for item in users:
        * ${ item }
      % endfor
  - Edit: appeal_arguments
    button: |
      **Write your argument**:
      > ${ single_paragraph(appeal_arguments) }
  - Edit: docket_number
    button: |
      **Docket number**:
      ${ docket_number }
  - Edit: decision_date
    button: |
      **What date did the lower court decide your case?**:
      ${ decision_date }
  - Edit: judge_name
    button: |
      **What was the name of the judge in the lower court?**:
      ${ judge_name }
  - Edit: trial_court
    button: |
      **Trial court**
      
      % if defined("trial_court.name.first"):
      * name: ${ trial_court.name.full() }
      % endif
  - Edit: other_parties.revisit
    button: |
      **Other parties**

      % for item in other_parties:
        * ${ item }
      % endfor
  - Edit: served_informal_brief
    button: |
      **Check yes if you are sending this brief (usually yes)**:
      ${ word(yesno(served_informal_brief)) }
  - Edit: appeal_issues
    button: |
      **Write what you are appealing**:
      > ${ single_paragraph(appeal_issues) }
  - Edit: appeal_conclusion
    button: |
      **Write a summary of what you want from the court**:
      > ${ single_paragraph(appeal_conclusion) }
  - Edit: served_record_appendix
    button: |
      **Check yes if you are sending the record appendix (usually yes)**:
      ${ word(yesno(served_record_appendix)) }
  - Edit: filed_date
    button: |
      **Write the date the case was filed in the lower court**:
      ${ filed_date }
  - Edit: appeal_facts
    button: |
      **Write all of the facts about your case**:
      > ${ single_paragraph(appeal_facts) }
  - Edit: served_impounded_appendix
    button: |
      **Check yes if you are sending the appendix (usually yes)**:
      ${ word(yesno(served_impounded_appendix)) }
  - Edit: challenged_judgments
    button: |
      **Write the court decisions you want changed**:
      > ${ single_paragraph(challenged_judgments) }
  - Edit: court_question
    button: |
      **Have you gone to court yet?**:
      ${ word(yesno(court_question)) }
  - Edit: appellant_question
    button: |
      **Did you win in the lower court?**:
      ${ word(yesno(appellant_question)) }
---
continue button field: users.revisit
question: |
  Edit users
subquestion: |
  ${ users.table }

  ${ users.add_action() }
---
table: users.table
rows: users
columns:
  - Signature: |
      row_item.signature if defined("row_item.signature") else ""
  - Pronouns: |
      row_item.pronouns if defined("row_item.pronouns") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address.address") else ""
  - Signature date: |
      row_item.signature_date if defined("row_item.signature_date") else ""
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Phone number: |
      row_item.phone_number if defined("row_item.phone_number") else ""
  - Email: |
      row_item.email if defined("row_item.email") else ""
edit:
  - signature
  - pronouns
  - address.address
  - signature_date
  - name.first
  - phone_number
  - email
confirm: True

---
continue button field: other_parties.revisit
question: |
  Edit other_parties
subquestion: |
  ${ other_parties.table }

  ${ other_parties.add_action() }
---
table: other_parties.table
rows: other_parties
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address.address") else ""
  - Email: |
      row_item.email if defined("row_item.email") else ""
edit:
  - name.first
  - address.address
  - email
confirm: True

---
id: download appellant_brief
event: appellant_brief_download
question: |
  All done
subquestion: |
  Thank you ${users}. Your form is ready to download and deliver.
  
  View, download and send your form below. Click the "Edit answers" button to fix any mistakes.

  ${ action_button_html(url_action('review_appellant_brief'), label='Edit answers', color='info') }
  
  
  ${ al_user_bundle.download_list_html() }
  

  ${ al_user_bundle.send_button_html(show_editable_checkbox=True) }

progress: 100
---
# ALDocument objects specify the metadata for each template
objects:
  - appellant_brief_Post_interview_instructions: ALDocument.using(title="Instructions", filename="appellant_brief_next_steps.docx", enabled=True, has_addendum=False)
  - appellant_brief_attachment: ALDocument.using(title="Appellant brief", filename="appellant_brief", enabled=True, has_addendum=False, )
---
# Bundles group the ALDocuments into separate downloads, such as for court and for the user
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[appellant_brief_Post_interview_instructions, appellant_brief_attachment], filename="appellant_brief", title="All forms to download for your records", enabled=True)
  - al_court_bundle: ALDocumentBundle.using(elements=[appellant_brief_attachment],  filename="appellant_brief", title="All forms to deliver to court", enabled=True)
---
# Each attachment defines a key in an ALDocument. We use i as the placeholder here so the same template is 
# used for "preview" and "final" keys, and logic in the template checks the value of 
# i to show or hide the user's signature
attachment:
  name: Post-interview-Instructions
  filename: appellant_brief_next_steps
  docx template file: appellant_brief_next_steps.docx
  variable name: appellant_brief_Post_interview_instructions[i]
  skip undefined: True
  tagged pdf: True
---
attachment:
  name: appellant brief
  filename: appellant_brief
  variable name: appellant_brief_attachment[i]
  skip undefined: True
  docx template file: appellant_brief.docx
  tagged pdf: True
