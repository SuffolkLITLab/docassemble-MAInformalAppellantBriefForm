---
include:
  - docassemble.AssemblyLine:assembly_line.yml
  - docassemble.MassAccess:massaccess.yml
---
metadata:
  title: >-
    Appellant brief
  short title: >-
    Appellant brief
  description: |-
    This interview helps someone in Massachusetts appeal a case to the Appeals Court.
  can_I_use_this_form: |
    If you are appealing a case, you can use this interview to write an informal brief to the Appeals Court.
  before_you_start: |
        You will need to know the following information to complete this interview:

        * The **Appeals Court** docket number for your case
        * The **Trial Court** docket number for your case
        * The names of the plaintiff(s) and defendant(s) in your trial court case
        * The current due date for your brief
        * The date by which you are able to file your brief by, within the court guidelines 
  maturity: production
  estimated_completion_minutes: 30
  estimated_completion_delta: 5
  LIST_topics: 
    - "CO-00-00-00-00"
    - "CO-02-00-00-00"
    - "CO-03-00-00-00"
    - "CO-07-05-00-00"
  tags:
    - "CO-00-00-00-00"
    - "CO-02-00-00-00"
    - "CO-03-00-00-00"
    - "CO-07-05-00-00"
  authors:
    - Jack Brandt
  original_form:
    - https://www.mass.gov/info-details/appeals-court-informal-brief-pilot-program
  original_form_published_on: ""
  help_page_url: >-
    https://www.mass.gov/info-details/appeals-court-informal-brief-pilot-program
  help_page_title: >-
    AppealsCourt
  allowed_courts: 
    - "Appeals Court"
  typical_role: "appellant"
  al_weaver_version: "1.11.0"
  generated_on: "2024-10-24"
  languages:
    - en
  jurisdiction: NAM-US-US+MA
  review_date: 2024-10-24
  form_titles:
    - Appellant brief
  form_numbers: []
  update_notes: |
---
code: |
  # This controls the default country and list of states in address field questions
  AL_DEFAULT_COUNTRY = "US"
---
code: |
  # This controls the default state in address field questions
  AL_DEFAULT_STATE = "MA"
---
code: |
  github_repo_name =  'docassemble-AppellantBrief'
---
code: |
  interview_short_title = "Get an informal brief - appellant"
---
code: |
  al_form_type = "appeal" 
---
objects:
  - users: ALPeopleList.using(there_are_any=True)
  - other_parties: ALPeopleList.using(there_are_any=True)
  - challenged_judgments: DAList.using(target_number=1, there_are_any=True)
  - appeal_facts: DAList.using(target_number=1, there_are_any=True)
  - appeal_arguments: DAList.using(target_number=1, there_are_any=True)
---
sections:
  - review_appellant_brief: Review your answers
---
#################### Interview order #####################
comment: |
  Controls order and branching logic for questions specific to this form
id: interview_order_appellant_brief
code: |
  # Set the allowed courts for this interview
  allowed_courts
  nav.set_section("review_appellant_brief")
  user_role #this could be used conditionally to direct the user to the appellee brief
  users.gather()
  users[0].pronouns
  users[0].address.address
  users[0].phone_number
  set_parts(subtitle=str(users))
  Information
  set_progress(16)
  trial_court
  decision_date
  appeal_issues
  challenged_judgments
  appeal_facts
  appeal_arguments
  set_progress(32)
  appeal_conclusion
  users[0].signature_date
  docket_number
  set_progress(48)
  other_parties[0].address.address
  other_parties[0].email
  set_progress(64)
  filing_institution
  filing_electronic
  filing_mail
  signature_fields
  served_informal_brief
  interview_order_appellant_brief = True
---
###################### Main order ######################
comment: |
  This block includes the logic for standalone interviews.
  Delete mandatory: True to include in another interview
mandatory: True
code: |
  al_intro_screen
  appellant_brief_intro
  interview_order_appellant_brief
  signature_date
  # Store anonymous data for analytics / statistics
  store_variables_snapshot(
      persistent=True,
      data={
          "zip": showifdef("users[0].address.zip"),
          "reached_interview_end": True,
      },
  )
  appellant_brief_download
---
id: Appellant_brief
continue button field: appellant_brief_intro
question: |
  Appellant brief
subquestion: |
  This interview will help you write an informal brief to the Appeals Court
  
  You will need to know the following information to complete this interview:

    * The **Appeals Court** docket number for your case
  
    * The **trial court** your case was decided in
  
    * The names of the plaintiff(s) and defendant(s) in your trial court case
  
    * The current due date for your brief
  
    * The date by which you are able to file your brief by, within the court guidelines 

  Most people take about 30 minutes to complete this interview.
---
id: Information
question: |
  Information
subquestion: |
  You can use this form to file an informal brief if you are appealing a court's decision to the Massachusetts Appeals Court.

  Click "Help" to access a checklist for filing an appeal
help: |
    - https://www.mass.gov/doc/checklist-for-preparing-a-brief-and-record-appendix-appeals-court/download
continue button field: Information
---
id: Lower Court Information
question: |
  Lower Court Information
fields:
  - "The case was filed in the lower court on": filed_date
    datatype: date  
  - "The lower court decided my case on": decision_date
    datatype: date
  - "The name of the judge was Judge": judge_name
    input type: text
    required: True
---
id: users[0].pronouns
question: |
  What are your pronouns?
fields: 
  - "My pronouns are": users[0].pronouns
    input type: text
    required: False
---
id: Your Appeal
question: |
  Your Appeal
subquestion: |
  List the issue or issues you are raising in this appeal and will discuss in your argument section.  
  
  It is your obligation to find out if any information in your case is impounded or confidential.
fields:
  - "Appeal": appeal_issues
    input type: area
    help: |
      An appeal is not a "do-over." An appeal is a review of a particular application of the law. You must appeal a specific legal error that you believe the trial court made. Errors can include the following:

      
      **Misrepresentation of legal precedent**: This occurs when the judge made a mistake about the law.

      
      **Reliance on evidence that should have been excluded**: This occurs when the judge either 
        - Did not allow you to prove something that you should have been allowed to prove.
        - Allowed the other side to prove something that they should not have been allowed to prove.

    #Add more common issues that the appeals court frequently sees
---
id: Challenged judgments
question: |
  What judgments from the lower court are you challenging?
subquestion: |
  Use citations from the record. This helps the appeals court understand exactly where the information you are challenging can be found. 
  
  Citations can be described using any abbreviations as long as they are clear and understandable.

  
  **Example**: “The judge said that the evidence was indadmissible because it was not relevant. Transcript 10/15/2024 at pg 5.” 
  
  **Example**: "Had the evidence been introduced it would have proven that I was not at fault. Exhibit #2 at pg 5.”  

# Add examples that the court believes are relevant
  
fields:
  - "Write the court decisions you want changed": challenged_judgments
    input type: area
    help: |
      List specific decisions that the judge made. This does not have to necessarily be the final result of the case. You could say 'The judge's decision to allow _________ as evidence.'
---
id: Facts
question: |
  Facts
subquestion: |
   Describe all the facts in the case that are relevant to the issues raised on appeal.  Any factual statement must be followed by a “citation” to the record appendix.
   
   This means a statement or abbreviation showing the Appeals Court the specific page(s) in the record appendix or transcript(s) where evidence of that fact is found.
fields:
  - "Facts:": appeal_facts
    input type: area
---
id: Argument
question: |
  Argument
subquestion: |
  Write an argument. This means you must list all issues you want to present to the Appeals Court, and, for each issue, write citations to supporting law in cases (preferably from Massachusetts), statutes, regulations, court rules, constitutional provisions, or other legal authorities.
fields:
  - "Write your argument": appeal_arguments
    input type: area
    required: True
---
id: docket number 
question: |
  What is the **Appeals Court** docket number for your case?
fields:
  - "Docket number": docket_number
    help: |
      Example: 1448CV001026
---
id: filing_institution
question: |
  Are you currently in a federal or state prison?
yesno: filing_institution
help: |
      If you are in a federal or state prison, then you will mail the brief. There is a form that will automatically attach to your document. 
---
id: filing_mail
question: |
  Are you filing this brief in the **mail**?
  
  - **Note:** You can only file this brief one time. If you choose to file by mail, do not file electronically. If you choose to file electronically, do not file by mail.
yesno: filing_mail
---
id: filing_electronic
question: |
  Are you filing this brief **electronically**?
  
  - **Note:** You can only file this brief one time. If you choose to file by mail, do not file electronically. If you choose to file electronically, do not file by mail.
yesno: filing_electronic
help: |
  We will give you instructions on how to do this at the end of the interview. If you choose to select "No" then you will have to mail the brief. We will automatically fill out a form for you that will attach to your brief.
---
id: user role
question: |
  Are you an appellant or appellee ?
subquestion: | 
  This form is for appellants. An **appellant** is a party who is asks a higher court to review the decision of the lower court, regardless of their party designation in the trial court.
  
  An **appellee** is a party who is not appealing and intends to respond to the appellant's request for a review of the lower court's decision, regardless of their party designation in the trial court.
  
fields: 
  - no label: user_role 
    input type: radio 
    choices: 
      - Appellant: APPELLANT #only offering one option for the user. We can make this conditional to direct the user to either the appellant brief or appellee brief.
---
id: Conclusion
question: |
  Conclusion
subquestion: |
  Write a brief summary of what action you want the court to take based on your argument.
fields:
  - "Write a summary of what you want from the court": appeal_conclusion
    input type: area
---
id: Confirmation Page
question: |
  Confirmation Page
subquestion: |
  Confirm that you will send the following items to the Appeals Court. 
fields:
  - "Brief": served_informal_brief
    datatype: yesno
  - "Record appendix": served_record_appendix
    datatype: yesno
  - "Impounded appendix (if necessary)": served_impounded_appendix
    datatype: yesno
    help: |
      If you are unsure, you can call the Appeals Court at 617-921-4443
---
id: signature_fields
question: |
  Sign your name
subquestion: |
  By signing your name, you agree to
  our terms and conditions.
signature: target_variable
under: |
  ${ user }
---
id: Today s Date
question: |
  Today's Date
fields:
  - "Today's date": users[0].signature_date
    datatype: date
---
id: preview appellant_brief
question: |
  Preview your form before you sign it
subquestion: |
  Here is a preview of the form you will sign on the next page.   
  
  ${ al_court_bundle.as_pdf(key='preview') }

  Click the image to open it in a new tab. Click the "Edit answers" button
  to edit your answers.

  ${ action_button_html(url_action('review_appellant_brief'), label='Edit answers', color='info') }
  
  Remember to come back to this window to continue and sign your form.
continue button field: appellant_brief_preview_question    
---
code: |
  signature_fields = ['users[0].signature']
---
id: appellant brief review screen
event: review_appellant_brief
question: |
  Review your answers
review:
  - Edit: users.revisit
    button: |
      **Users**

      % for item in users:
        * ${ item }
      % endfor
  - Edit: appeal_arguments
    button: |
      **Write your argument**:
      > ${ single_paragraph(appeal_arguments) }
  - Edit: docket_number
    button: |
      **Docket number**:
      ${ docket_number }
  - Edit: decision_date
    button: |
      **What date did the lower court decide your case?**:
      ${ decision_date }
  - Edit: judge_name
    button: |
      **What was the name of the judge in the lower court?**:
      ${ judge_name }
  - Edit: trial_court
    button: |
      **Trial court**
      
      % if defined("trial_court.name.first"):
      * name: ${ trial_court.name.full() }
      % endif
  - Edit: other_parties.revisit
    button: |
      **Other parties**
      
      % for item in other_parties:
        * ${ item }
      % endfor
  - Edit: served_informal_brief
    button: |
      **Check yes if you are sending this brief (usually yes)**:
      ${ word(yesno(served_informal_brief)) }
  - Edit: appeal_issues
    button: |
      **Write what you are appealing**:
      > ${ single_paragraph(appeal_issues) }
  - Edit: appeal_conclusion
    button: |
      **Write a summary of what you want from the court**:
      > ${ single_paragraph(appeal_conclusion) }
  - Edit: served_record_appendix
    button: |
      **Check yes if you are sending the record appendix (usually yes)**:
      ${ word(yesno(served_record_appendix)) }
  - Edit: filed_date
    button: |
      **Write the date the case was filed in the lower court**:
      ${ filed_date }
  - Edit: appeal_facts
    button: |
      **Write all of the facts about your case**:
      > ${ single_paragraph(appeal_facts) }
  - Edit: served_impounded_appendix
    button: |
      **Check yes if you are sending the appendix (usually yes)**:
      ${ word(yesno(served_impounded_appendix)) }
  - Edit: challenged_judgments
    button: |
      **Write the court decisions you want changed**:
      > ${ single_paragraph(challenged_judgments) }
  - Edit: court_question
    button: |
      **Have you gone to court yet?**:
      ${ word(yesno(court_question)) }
  - Edit: appellant_question
    button: |
      **Did you win in the lower court?**:
      ${ word(yesno(appellant_question)) }
---
continue button field: users.revisit
question: |
  Edit users
subquestion: |
  ${ users.table }

  ${ users.add_action() }
---
table: users.table
rows: users
columns:
  - Signature: |
      row_item.signature if defined("row_item.signature") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address") else ""
  - Signature date: |
      row_item.signature_date if defined("row_item.signature_date") else ""
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Phone number: |
      row_item.phone_number if defined("row_item.phone_number") else ""
  - Email: |
      row_item.email if defined("row_item.email") else ""
edit:
  - signature
  - pronouns
  - address.address
  - signature_date
  - name.first
  - phone_number
  - email
confirm: True

---
continue button field: other_parties.revisit
question: |
  Edit other_parties
subquestion: |
  ${ other_parties.table }

  ${ other_parties.add_action() }
---
table: other_parties.table
rows: other_parties
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address") else ""
  - Email: |
      row_item.email if defined("row_item.email") else ""
edit:
  - name.first
  - address.address
  - email
confirm: True

---
id: download appellant_brief
event: appellant_brief_download
question: |
  All done
subquestion: |
  Thank you ${users}. Your form is ready to download and deliver.
  
  View, download and send your form below. Click the "Edit answers" button to fix any mistakes.

  ${ action_button_html(url_action('review_appellant_brief'), label='Edit answers', color='info') }
  
  
  ${ al_user_bundle.download_list_html() }
  

  ${ al_user_bundle.send_button_html(show_editable_checkbox=True) }

progress: 100
---
# ALDocument objects specify the metadata for each template
objects:
  - appellant_brief_Post_interview_instructions: ALDocument.using(title="Instructions", filename="appellant_brief_next_steps.docx", enabled=True, has_addendum=False)
  - appellant_brief_attachment: ALDocument.using(title="Appellant brief", filename="appellant_brief", enabled=True, has_addendum=False, )
---
# Bundles group the ALDocuments into separate downloads, such as for court and for the user
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[appellant_brief_Post_interview_instructions, appellant_brief_attachment], filename="appellant_brief", title="All forms to download for your records", enabled=True)
  - al_court_bundle: ALDocumentBundle.using(elements=[appellant_brief_attachment],  filename="appellant_brief", title="All forms to deliver to court", enabled=True)
---
# Each attachment defines a key in an ALDocument. We use i as the placeholder here so the same template is 
# used for "preview" and "final" keys, and logic in the template checks the value of 
# i to show or hide the user's signature
attachment:
  name: Post-interview-Instructions
  filename: appellant_brief_next_steps
  docx template file: appellant_brief_next_steps.docx
  variable name: appellant_brief_Post_interview_instructions[i]
  skip undefined: True
  tagged pdf: True
---
attachment:
  name: appellant brief
  filename: appellant_brief
  variable name: appellant_brief_attachment[i]
  skip undefined: True
  docx template file: appellant_brief.docx
  tagged pdf: True
